version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres-container
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  app:
    build: .
    container_name: ticketing-service-container
    restart: always
    env_file:
      - .env  
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      DATABASE_URL: "postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}?sslmode=disable"
      REDIS_HOST: "redis:6379"
      RABBITMQ_HOST: "amqp://guest:guest@rabbitmq:5672/"
    ports:
      - "3000:3000"
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data:
